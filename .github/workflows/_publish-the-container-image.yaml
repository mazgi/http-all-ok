name: publish-the-container-image

on:
  workflow_call:
    inputs:
      src-container-image-name:
        required: true
        type: string
      publish-container-image-name:
        required: true
        type: string

jobs:
  build-image:
    env:
      GIT_SHORT_SHA: null
      PLATFORM_PAIR: null
      REGISTRY_PREFIX: null
      TAG_SUFFIX: null
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          # - linux/arm64
    steps:
      - uses: actions/checkout@v4
      #
      # Generate the docker tag prefix with the registry - ghcr.io
      - name: Generate tag prefix for ghcr.io
        run: |
          echo REGISTRY_PREFIX="ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV
      #
      # Generate the docker tag suffix
      - name: Generate the docker tag suffix using the git tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo TAG_SUFFIX="${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      #
      # Set up the Docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      #
      # Build the images
      # See also:
      #   - https://docs.docker.com/reference/cli/docker/buildx/build/#output
      #   - https://docs.docker.com/reference/cli/docker/buildx/build/#platform
      #   - https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_PREFIX }}/${{ inputs.publish-container-image-name }}
      #
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get GIT_SHORT_SHA as an environment variable
        run: |
          echo "GIT_SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          build-args: |
            GIT_VERSION_TAG=${{ env.TAG_SUFFIX }}
            GIT_SHORT_SHA=${{ env.GIT_SHORT_SHA }}
          build-contexts: workspace=workspace
          context: Dockerfile.d/${{ inputs.src-container-image-name }}/
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_PREFIX }}/${{ inputs.publish-container-image-name }},push-by-digest=true,name-canonical=true,push=true
          provenance: false
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Generate artifact name
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge-images:
    env:
      REGISTRY_PREFIX: null
      TAG_SUFFIX: null
    needs:
      - build-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      #
      # Generate the docker tag prefix with the registry - ghcr.io
      - name: Generate tag prefix for ghcr.io
        run: |
          echo REGISTRY_PREFIX="ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV
      #
      # Generate the docker tag suffix
      - name: Generate the docker tag suffix using the git tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo TAG_SUFFIX="${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - name: Generate the docker tag suffix using the current date
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo TAG_SUFFIX="$(date +%Y%m-)${GITHUB_SHA::7}" >> $GITHUB_ENV
      #
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      #
      # Set up the Docker build environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # Set Docker tags
      #   - https://github.com/docker/metadata-action?tab=readme-ov-file#latest-tag
      #   - https://github.com/docker/metadata-action?tab=readme-ov-file#typesemver
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_PREFIX }}/${{ inputs.publish-container-image-name }}
          tags: |
            # Enable `latest` tag when the branch is default and the language version is first on versions list.
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=raw,value={{date 'YYYYMM'}}-{{sha}},enable=${{ !startsWith(github.ref, 'refs/tags/v') }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_PREFIX }}/${{ inputs.publish-container-image-name }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_PREFIX }}/${{ inputs.publish-container-image-name }}:${{ steps.meta.outputs.version }}
